parameters:
  dependsOn: 'Build'
  artifactName: 'Module'
  specDirectory: '$(Build.SourcesDirectory)/Specs'
  includeTag: ''
  excludeTag: ''
  additionalModulePaths: ''
  stagingDirectory: '$(Build.ArtifactStagingDirectory)'
  codeCoverageDirectory: '$(Build.ArtifactStagingDirectory)'
  poolVmImage: 'windows-2019'

jobs:
  - job: PesterGherkin
    dependsOn: ${{ parameters.dependsOn }}
    variables:
      resultsFile: '$(Common.TestResultsDirectory)/Test-$(Build.SourceVersion).xml'
      CodeCoverageOutputFile: '$(Common.TestResultsDirectory)/Coverage-$(Build.SourceVersion).xml'

    pool:
      vmImage: ${{ parameters.poolVmImage }}

    steps:
    - checkout: self # re-checkout, because we don't package tests
      fetchDepth: 1  # we only need the current tests
      clean: false

    - template: InstallRequiredModules-step.yml
      parameters:
        Destination: $(Build.SourcesDirectory)/RequiredModules

    - task: DownloadPipelineArtifact@1
      displayName: 'Download Build Artifacts'
      inputs:
        artifactName: ${{ parameters.artifactName }}
        downloadPath: ${{ parameters.stagingDirectory }}
        itemPattern: '**/*'

    - template: Gherkin-step.yml
      parameters:
        specDirectory: ${{ parameters.specDirectory }}
        includeTag: ${{ parameters.includeTag }}
        excludeTag: ${{ parameters.excludeTag }}
        additionalModulePaths: "${{ parameters.stagingDirectory }};${{ parameters.additionalModulePaths }};$(Build.SourcesDirectory)/RequiredModules"
        codeCoverageDirectory: ${{ parameters.codeCoverageDirectory }}
        Filter: ${{ parameters.filter }}
        Certificate: ${{ parameters.certificate }}
        resultsFile: '$(Common.TestResultsDirectory)/Test-$(Build.SourceVersion).xml'

    - task: PublishTestResults@2
      displayName: 'Publish Test Results'
      inputs:
        testResultsFormat: NUnit
        testResultsFiles: '$(Common.TestResultsDirectory)/Test-$(Build.SourceVersion).xml'
        searchFolder: '$(Common.TestResultsDirectory)'
      condition: succeededOrFailed()

    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage'
      inputs:
        summaryFileLocation: '$(Common.TestResultsDirectory)/Coverage-$(Build.SourceVersion).xml'
      condition: succeededOrFailed()
